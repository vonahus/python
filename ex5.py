"""
1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
Об окончании ввода данных свидетельствует пустая строка.
"""

# with open("File1", "w") as file:
#     line = input("Введите несколько строк: ")
#     while line:
#         file.write(line + '\n')
#         line = input()

"""
2. Создать текстовый файл (не программно), сохранить в нем несколько строк,
выполнить подсчет количества строк, количества слов в каждой строке.
"""

# with open("File1") as file:
#     content = file.readlines()
#     print(f"Количество строк в файле: {len(content)}")
#     i = 1
#     for line in content:
#         print(f'Количество слов в строке {i}: {len(line.split())}')
#         i += 1

"""
3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов.
Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
Выполнить подсчет средней величины дохода сотрудников.
"""

# with open("File2") as file:
#     content = file.readlines()
#     my_list = []
#     my_sum = 0
#     for line in content:
#         i = line.split()
#         my_sum += int(i[1])
#         if int(i[1]) < 20000:
#             my_list.append(i[0])
#     print(f'Менее 20 тыс. имеют оклад сотрудники: ', ', '.join(my_list))
#     print(f'Средняя величина дохода сотрудников: {int(my_sum / len(content))}')

"""
4. Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4
Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
При этом английские числительные должны заменяться на русские.
Новый блок строк должен записываться в новый текстовый файл.
"""

# my_dict = {'One': "Один", 'Two': "Два", "Three": "Три", "Four": "Четыре"}
# with open("File3") as file1, open("File4", "w") as file2:
#     content = file1.readlines()
#     for line in content:
#         i = line.split()
#         file2.write(f'{my_dict[i[0]]} - {i[2]}\n')

"""
5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
"""

# with open("File5", "w") as file1:
#     content = input("Введите набор чисел через пробел: ")
#     print(content, file=file1)
#
# with open("File5") as file:
#     content = file.readline()
#     my_list = content.split()
#     my_sum = 0
#     for el in my_list:
#         my_sum += int(el)
#     print(f'Сумма чисел в файле: {my_sum}')

"""
6. Необходимо создать (не программно) текстовый файл,
где каждая строка описывает учебный предмет и наличие лекционных,
практических и лабораторных занятий по этому предмету и их количество.
Важно, чтобы для каждого предмета не обязательно были все типы занятий.
Сформировать словарь, содержащий название предмета и общее количество занятий по нему.
Вывести словарь на экран.
Примеры строк файла:
Информатика: 100(л) 50(пр) 20(лаб).
Физика: 30(л) — 10(лаб)
Физкультура: — 30(пр) —

Пример словаря:
{“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
"""

# with open("File6") as file:
#     my_dict = {}
#     lesson_count = []
#     for line in file:
#         subject, *lessons = line.split()
#         lesson_count.clear()
#         for lesson in lessons:
#             if lesson != '—':
#                 lesson_count.append(int(lesson.rstrip('(л)(пр)(лаб).')))
#                 my_dict.update({subject.rstrip(":"): sum(lesson_count)})
#
# print(my_dict)

"""
7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме:
название, форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.
Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

Подсказка: использовать менеджеры контекста.
"""

# import json
#
# with open("File7") as file:
#     dict_profit = {}
#     list_average = []
#     dict_list = []
#     for line in file.readlines():
#         name, proceeds, costs = line.split()
#         profit = int(proceeds) - int(costs)
#         dict_profit.update({name: profit})
#         if profit > 0:
#             list_average.append(profit)
#
#     dict_list.append(dict_profit)
#     dict_list.append({"average_profit": sum(list_average)/len(list_average)})
#     print(dict_list)
#
# with open("File7.json", "w") as file:
#     json.dump(dict_list, file)