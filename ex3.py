"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""


# def division(a, b):
#     try:
#         return a / b
#     except ZeroDivisionError:
#         return "Делить на ноль нельзя"
#
#
# print(division(int(input("Введите первое число: ")), int(input("Введите второе число: "))))


"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы.
Реализовать вывод данных о пользователе одной строкой.
"""


# def profile(**kwargs):
#     return f"{kwargs['surname']} {kwargs['name']}, e-mail: {kwargs['email']}"
#
#
# print(profile(name="Антон", surname="Кит", year="1986", city="Нью-Йорк", email="kit.a@gmail.com", phone="555-55-55"))


"""
3. Реализовать функцию my_func(),
которая принимает три позиционных аргумента,
и возвращает сумму наибольших двух аргументов.
"""


# def my_func(a, b, c):
#     my_list = [a, b, c]
#     my_list.sort(reverse=True)
#     my_list.pop(2)
#     return sum(my_list)
# print(my_func(1, 2, 3))


"""
4. Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами.
Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""


# def my_func(x, y):
#     x_y = 1
#     index = y
#     while index < 0:
#         x_y = x_y * 1/x
#         index = index + 1
#     return f"{x} в степени {y} равно {x_y}"
#
#
# print(my_func(int(input("Введите целое положительное число: ")), int(input("Введите целое отрицательное число: "))))


"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел,
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""


# def calc_sum(my_string):
#     my_list = my_string.split()
#     my_sum = 0
#     for element in my_list:
#         try:
#             if element == "Q":
#                 special_symbol = "Q"
#                 return my_sum, special_symbol
#             else:
#                 my_sum = my_sum + int(element)
#                 special_symbol = "не Q"
#         except ValueError:
#             continue
#
#     return my_sum, special_symbol
#
#
# result_sum = 0
# symbol = "не Q"
# while symbol == "не Q":
#     my_string = input("Введите числа, разделенные пробелом. Для завершения программы введите Q ")
#     current_sum, symbol = calc_sum(my_string)
#     result_sum = result_sum + current_sum
#     if symbol == "Q":
#         break
#     else:
#         print("Промежуточная сумма: ", result_sum)
# print("Окончательная сумма: ", result_sum)


"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
"""


# def int_func(word):
#     return word.title()


# my_string = input("Введите строку в нижнем регистре: ")
# words = my_string.split()
# my_list = []
# for el in words:
#     my_list.append(int_func(el))
#
# print(" ".join(my_list))

"""
Почему такой код неправильный?

my_string = input("Введите строку в нижнем регистре: ")
words = my_string.split()
for el in words:
    words.insert(words.index(el), int_func(el))

print(words)
"""

